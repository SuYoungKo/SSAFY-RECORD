#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <string>
#include <stack>
#include <cstring>

using namespace std;

int parent[10];

//대표를 찾아주는 함수
int Find(int now)//dfs 처럼 만듦
{
	if (now == parent[now]) // 최종적으로 대표까지 왔을떄(now가 대표일때 )멈춤
		return now; // Find()로 물어봤던곳에 now가 대표다 라고 알려줌
		
	int root = Find(parent[now]); // 부모로 타고 올라가라!
	//now의 대표 root를 받아옴

	parent[now] = root; // now의 대표가 root였구나 라고 기록(다이렉트로 연결)** 업그레이드 **
	return root; // now의 대표는 root다 라고 알려줌
}

//그룹을 묶어주는 함수
void Union(int A, int B)
{
	int pA = Find(A); //A의 대표
	int pB = Find(B); //B의 대표

	parent[pB] = pA;
}

int main()
{
	
	//1. 각 노드가 자기자신이 대표다
	for (int i = 1; i <= 6; i++)
		parent[i] = i;

	//2. 
	Union(1, 2);
	Union(1, 3);
	Union(4, 5);
	Union(3, 5);

	//만약 2와 5가 같은 그룹인가?를 확인하고 싶을때
}

